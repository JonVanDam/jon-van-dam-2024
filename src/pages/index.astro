---
import HtmlLayout from '../layouts/HtmlLayout.astro';
import Header from '../components/header/Header.astro';
import Footer from '../components/footer/Footer.astro';

const pageTitle = 'Jon Van Dam';

const projects = await Astro.glob('./*/*.md');
---

<HtmlLayout pageTitle={pageTitle} onHomePage={true}>
  <div class="min-h-screen flex flex-col">
    <header class="w-full">
      <Header projectId={undefined} project={undefined} chapterIds={undefined} />
    </header>

    <main class="w-full flex-grow flex justify-center items-center">
      <div class="flex flex-col gap-8 pt-16 pb-24 px-8">
        <div class="flex flex-col items-center gap-4 max-w-[700px] mx-auto text-center">
          <h1 class="text-3xl sm:text-5xl font-bold text-primary">Guides and tutorials for our BluePrint Components</h1>
          <h2 class="text-base sm:text-lg text-secondary max-w-[500px]">
            Easily get started with one of our components, designed to add functionality to your project
          </h2>
        </div>
        <div
          class="overflow-x-hidden max-w-[310px] mobile:max-w-[370px] min-[815px]:max-w-[740px] min-[1180px]:max-w-[1110px] mx-auto"
        >
          <div id="slider" class="flex transition-all duration-500">
            {
              projects
                .sort((a, b) => (a.frontmatter.sortOrder > b.frontmatter.sortOrder ? 1 : -1))
                .map((project) => {
                  return (
                    <div class="flex-[0_0_310px] mobile:flex-[0_0_370px] px-3">
                      <a href={project.url}>
                        <div class="shadow-md rounded-lg overflow-hidden">
                          <img
                            src={project.frontmatter.thumbnail}
                            class="hover:opacity-80 transition-all h-full w-full object-cover"
                          />
                        </div>
                      </a>
                    </div>
                  );
                })
            }
          </div>
        </div>
      </div>
    </main>

    <Footer project={undefined} />
  </div>
</HtmlLayout>

<script is:inline define:vars={{ projects }}>
  let slider = document.getElementById('slider');

  let windowWidth = window.screen.width;

  let sliderIndex = 0;
  let sliderLength = 3;

  const updateSlider = (index) => {
    if (index === 0) {
      slider.style.marginLeft = '0px';
    } else {
      slider.style.marginLeft = `-${index * (windowWidth < 440 ? 310 : 370)}px`;
    }
  };

  setInterval(() => {
    console.log(windowWidth);

    if (!slider) return;
    sliderIndex = sliderIndex + 1;
    if (sliderIndex > projects.length - sliderLength) {
      sliderIndex = 0;
    }

    updateSlider(sliderIndex);
  }, 4 * 1000);

  // Keep track of window width with resizer function
  // -> also update sliderLength accordingly

  const widthResizer = () => {
    windowWidth = window.innerWidth;

    sliderLength = window.innerWidth > 1180 ? 3 : window.innerWidth > 815 ? 2 : 1;
  };

  window.addEventListener('resize', widthResizer);
</script>
